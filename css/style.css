@import url('https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap');

:root {
  --primary-color: #047aed;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  color: #333;
  line-height: 1.6;
  font-family: 'Lato', sans-serif;
}

ul {
  list-style-type: none;
}

a {
  color: #333;
  text-decoration: none;
}

h1,
h2 {
  margin: 10px 0;
  line-height: 1.2;
  font-weight: 300;
}

p {
  margin: 10px 0;
}

img {
  width: 100%;
}

/* NAVBAR */
.navbar {
  height: 70px;
  background-color: var(--primary-color);
  color: white;
}

.navbar ul {
  display: flex;
}

.navbar a {
  margin: 0 5px;
  padding: 10px;
  color: white;
}

.navbar a:hover {
  border-bottom: 2px solid white;
}

.navbar .flex {
  justify-content: space-between;
}

/* SHOWCASE */
.showcase {
  position: relative;
  height: 400px;
  background-color: var(--primary-color);
  color: white;
}

.showcase h1 {
  font-size: 2.5rem;
}

.showcase p {
  margin: 20px 0;
}

.showcase .grid {
  grid-template-columns: 55% 45%;
  gap: 30px;
  overflow: visible;
}

.showcase-form {
  position: relative;
  top: 60px;
  justify-self: flex-end;
  z-index: 100;
  width: 400px;
  height: 350px;
  padding: 40px;
}

.showcase-form .form-control {
  margin: 30px 0;
}

.showcase-form input[type='text'],
.showcase-form input[type='email'] {
  width: 100%;
  border: 0;
  border-bottom: 1px solid #b4becb;
  padding: 3px;
  font-size: inherit;
}

.showcase-form input {
  outline: none;
}

.showcase::before,
.showcase::after {
  content: '';
  position: absolute;
  bottom: -70px;
  right: 0;
  left: 0;
  height: 100px;
  background-color: white;
  transform: skewY(-3deg);
  -webkit-transform: skewY(-3deg);
  -moz-transform: skewY(-3deg);
  -ms-transform: skewY(-3deg);
}

/* STATS */
.stats {
  padding-top: 100px;
}

.stats-heading {
  max-width: 500px;
  margin: auto;
}

.stats .grid h3 {
  font-size: 2.2rem;
}

.stats .grid p {
  font-size: 1.25rem;
 font-weight: bold; 
}

/* CLI */
.cli .grid {
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, 1fr);
}

.cli .grid > *:first-child {
  grid-column: 1 / span 2;
  grid-row: 1 / span 2;
}